<?php
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . 'libraries/REST_Controller.php';

/**
 * @author : jeevan<jeevan@seoessenc.com>
 * @date : 31-oct-2018
 * @objective : Get all information regarding jobs 
 */
class Search extends REST_Controller {

    function __construct() {
        parent::__construct();
         $this->load->model('admin/search_model');
        $this->load->model('admin/job_model');
        $this->load->model('admin/job_category_model');
        
       
    }

    public function job_category_get() {
        $category = $this->job_category_model->where('parent_id', 0)->get_all();
        if (!empty($category)) {
            $response = array(
                'result' => $category, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }
    
    
    public function inventorysearch_post() {
        $postData = $this->input->post();
        
        
        $title = !empty($postData['title']) ? trim($postData['title']) : '';
        $price = !empty($postData['price']) ? trim($postData['price']) : '';
        $location = !empty($postData['location']) ? trim($postData['location']) : '';
        
     //   echo "hiii"; exit;
     
         $inventorysearch =  $this->search_model->inventoryDetail($title,$price,$location);
         
    
      
        if (!empty($inventorysearch)) {
            $response = array(
                'result' => $inventorysearch, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }
public function jobsearch_post() {
        $postData = $this->input->post();
        
        
        $location = !empty($postData['location']) ? trim($postData['location']) : '';
        $title = !empty($postData['title']) ? trim($postData['title']) : '';
        $position = !empty($postData['position']) ? trim($postData['position']) : '';
        $userid = !empty($postData['userid']) ? trim($postData['userid']) : '';
        
     //   echo "hiii"; exit;
     
         $inventorysearch =  $this->search_model->jobsearchDetail($location,$title,$position);
       $finaljobs=[];  
   
     foreach ($inventorysearch as $key => $jobdata){
          $userName =  $this->job_model->getUserDetail($inventorysearch[$key]->user_id,$inventorysearch[$key]->id,$userid);
         // print_r($userName);
            $expnameapp=explode("_",$userName);
            if($expnameapp[0]!='') {
        if($expnameapp[1]>0) {$expapp=1;} else {$expapp=0;}
          if (!empty($expnameapp[2])) {
         if($expnameapp[2]>0) {$favname=1;} else {$favname=0;}  }else {$favname=0;}
          if (!empty($expnameapp[3])) {
         if(!$expnameapp[3]) {$faexp=$expnameapp[3];} else {$faexp="";}  }else {$faexp="";}
         
           $finaljobs[] = array(
                "id" => $inventorysearch[$key]->id,
                "user_id" => $inventorysearch[$key]->user_id,
                 "user_name" => $expnameapp[0],
                 "user_email" => $expnameapp[3],
                  "is_applied" => $expapp,
                   "is_fav" => $favname,
                "job_title" => $inventorysearch[$key]->job_title,
                "job_description" => $inventorysearch[$key]->job_description,
                "location" => $inventorysearch[$key]->location,
                "min_salary" => $inventorysearch[$key]->min_salary,
                "max_salary" => $inventorysearch[$key]->max_salary,
                "type" => $inventorysearch[$key]->type,
                "experience" => $inventorysearch[$key]->experience,
                "compony" => $inventorysearch[$key]->compony,
                "role" => $inventorysearch[$key]->role,
                "created_at" => $inventorysearch[$key]->created_at,
                
                "updated_at" => $inventorysearch[$key]->updated_at,
                "status" => $inventorysearch[$key]->status,
                "category_id" => $inventorysearch[$key]->category_id,
                "sub_category_id" => $inventorysearch[$key]->sub_category_id,
                "currency" => $inventorysearch[$key]->currency,
              //  "category" => $inventorysearch[$key]->category,
              
                
                );
               $finaljobsdata =  $finaljobs;
         
            }
     }
    
    
    
    
      
        if (!empty($finaljobsdata)) {
            $response = array(
                'result' => $finaljobsdata, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }
    
    
    
public function adssearch_post() {
        $postData = $this->input->post();
        
        
        $categories = !empty($postData['categories']) ? trim($postData['categories']) : '';
        $type = !empty($postData['type']) ? trim($postData['type']) : '';
        $location = !empty($postData['location']) ? trim($postData['location']) : '';
          $price = !empty($postData['price']) ? trim($postData['price']) : '';
           $title = !empty($postData['title']) ? trim($postData['title']) : '';
        
     //   echo "hiii"; exit;
     
         $inventorysearch =  $this->search_model->adsearchDetail($categories,$title,$location,$price);
         
    
      
        if (!empty($inventorysearch)) {
            $response = array(
                'result' => $inventorysearch, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }
}
