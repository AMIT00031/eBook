<?php
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . 'libraries/REST_Controller.php';

/**
 * @author : dilip<dilip@seoessenc.com>
 * @date : 2018-dwc-18
 * @objective : Get all information regarding jobs 
 */
class Inventory extends REST_Controller {

    function __construct() {
        parent::__construct();
        $this->load->model('admin/job_model');
        $this->load->model('admin/job_category_model');
        $this->load->model('admin/inventory_model');    
       
    }
    
    public function inventory_post() { 
        //$category = $this->inventory_model->where('parent_id', 0)->get_all();
        //$inventory = $this->inventory_model->get_all();
		$data = array();
	   
	    $inv_id 		= 	$this->input->post('inv_id');
		$part_no 		= 	$this->input->post('part_no');
		$description 	= 	$this->input->post('description');
		$model_no 		= 	$this->input->post('model_no');
		$seller_name 	= 	$this->input->post('seller_name');
		
		
        $id 	= (int) $inv_id; 
		
		/* if($id){ 
			$whrCond = array('id'=>$id,'status'=>'1');
			$inventory = $this->inventory_model->getInventroy($whrCond);
		}else{ 
			$whrCond = array('status'=>'1');
			$inventory = $this->inventory_model->getInventroy($whrCond);
		} */
		$whrCond                =    array();
		$whrCond2               =	'';
		$whrCond3               =	'';
		$whrCond4               =	'';
		$whrCond5               =	'';
	    
		if($id){		
	
			$whrCond = array('id'=>$id,'status'=>'1');
				
		} else if( $description || $model_no || $part_no || $seller_name ){
			
			$whrCond = array('status'=>'1');
			
			$whrCond2 = ($description)?$description:'';
			$whrCond3 = ($model_no)?$model_no:'';
			$whrCond4 = ($part_no)?$part_no:'';
			$whrCond5 = ($seller_name)?$seller_name:'';				
			
		}else{
			$whrCond = array('status'=>'1');
		}				
		
		$inventory = $this->inventory_model->getInventroy($whrCond,$whrCond2,$whrCond3,$whrCond4,$whrCond5);
		//print_r($inventory);
		
		 if (!empty($inventory)) {
			 
			foreach($inventory as $key=>$inventoryAll){ 
				
				$inventory[$key]->id 			=  $inventoryAll->id;
				$inventory[$key]->country_id 	=  $inventoryAll->country_id;
				$inventory[$key]->user_id 		=  $inventoryAll->user_id;
				$inventory[$key]->inv_cate_id 	=  $inventoryAll->inv_cate_id;
				
				$inventory[$key]->inv_cate_name =  $inventoryAll->inv_cate_name;
				$inventory[$key]->inv_type 		=  $inventoryAll->inv_type;
				$inventory[$key]->title 		=  $inventoryAll->title;
				$inventory[$key]->description 	=  $inventoryAll->description;
				$inventory[$key]->tags 			=  $inventoryAll->tags;
				$inventory[$key]->price 		=  $inventoryAll->price;
				$inventory[$key]->negotiable 	=  $inventoryAll->negotiable;
				$inventory[$key]->priceicon 	=  $inventoryAll->priceicon;
				$inventory[$key]->city_id 		=  $inventoryAll->city_id;
				$cityDetail						=  $this->inventory_model->getRecord('oilcities',$inventoryAll->city_id,'','');
				$inventory[$key]->city_name 	=  $cityDetail->name;
				$inventory[$key]->currency 		=  $inventoryAll->currency;
				$inventory[$key]->seller_name 	=  $inventoryAll->seller_name;
				$inventory[$key]->seller_email 	=  $inventoryAll->seller_email;
				$inventory[$key]->seller_phone 	=  $inventoryAll->seller_phone;
				$inventory[$key]->image 		=  $inventoryAll->image;
				$inventory[$key]->is_hide 		=  $inventoryAll->is_hide;
				$inventory[$key]->created_at 	=  $inventoryAll->created_at;
				$inventory[$key]->updated_at 	=  $inventoryAll->updated_at;
				$inventory[$key]->reviewed 		=  $inventoryAll->reviewed;
				$inventory[$key]->deleted_at 	=  $inventoryAll->deleted_at;
				$inventory[$key]->status 		=  $inventoryAll->status;
				
				$imageexplode=[];
				$invnetoryImages =  $this->inventory_model->getAllRecord('inventory_images','',array('inv_id' => $inventoryAll->id) );
				
				if (!empty($invnetoryImages)) {
				  
				  foreach ($invnetoryImages as $keys => $imgdatadata){
		  
					$imageexplode[] =($imgdatadata->filename);     
				  }
			  
				}
				else{
					$imageexplode='NULL';
				}
				
				$inventory[$key]->filename 		=  $imageexplode;
				
			}
		}
		
		/*  

            "is_hide": "Yes",
            "reviewed": "0",
            "featured": "0",
            "archived": "0",
            "deleted_at": "0",
            "created_at": "2018-12-20 08:03:10",
            "updated_at": null,
            "status": "1" */
		
        if (!empty($inventory)) {
            $response = array(
                'result' => $inventory, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    }
	
	
	
	public function inventory2_post() { 
	
		//$category = $this->inventory_model->where('parent_id', 0)->get_all();
        //$inventory = $this->inventory_model->get_all();
	    $inv_id = $this->input->post('inv_id');
        $id 	= (int) $inv_id;
		if($id){ 
			$whrCond = array('id'=>$id,'status'=>'1');
			$inventory = $this->inventory_model->where($whrCond)->get_first();		
		}else{
			$whrCond = array('status'=>'1');
			$inventory = $this->inventory_model	->where($whrCond)->get_all();
		}
		
        if (!empty($inventory)) {
            $response = array(
                'result' => $inventory, // Automatically generated by the model
                'status' => '1'
            );
            $this->set_response($response, REST_Controller::HTTP_OK);
        } else {
            $this->set_response([
                'status' => '0',
                'message' => 'No record found'
                    ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
        }
    
        
		
	    
    }
    
}
